WHEN TO USE DP?

* CHOICE - CHOICE MEANS RECURSION, IF RECURSION HAS TWO OR MORE FUNCTION CALLS, MEANS THERE IS A POSSIBILITY OF REPETETIVE CALLS, HENCE DP CAN BE USED.

* OPTIMAL - MAX, MIN, LARGEST

HOW TO INDENTIFY KNAPSACK ?

* IF THERE IS AN ARRAY WITH CHOICE FOR EVERY ELEMENT(eg. to include or exclude it) AND AND TARGET TO ACHIVE (eg. filling knapsack, getting a sum)

* BOUNDED   - IF YOU CAN CHOOSE EVERY ELEMENT ONLY ONCE
* UNBOUNDED - IF YOU CAN CHOOSE EVERY ELEMRNT MULTIPLE TIMES
